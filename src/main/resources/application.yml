spring:
  application:
    name: notification-recipient-service
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?currentSchema=${POSTGRES_SCHEMA}&serverTimezone=UTC
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  flyway:
    schemas:  notifications-recipient-service
    locations: classpath:db/migration
  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: "*"
#        spring.json.value.default.type: com.abilava.dtos.SendNotificationEvent
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
server:
  port: ${SERVER_PORT:8082}

# Topics config
topics:
  consumer-groups:
    notifications: notifications-group
  inbound:
    send-notification: notification-service-send-notification-topic

